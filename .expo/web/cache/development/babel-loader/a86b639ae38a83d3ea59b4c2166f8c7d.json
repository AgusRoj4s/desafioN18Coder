{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { COLORS } from \"../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ImageSelector = function ImageSelector(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickerURI = _useState2[0],\n      setPickerURI = _useState2[1];\n\n  var verifyPermissions = function verifyPermissions() {\n    var _await$ImagePicker$re, status;\n\n    return _regeneratorRuntime.async(function verifyPermissions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            status = _await$ImagePicker$re.status;\n            console.log(status);\n\n            if (!(status !== 'granted')) {\n              _context.next = 8;\n              break;\n            }\n\n            Alert.alert('SIN PERMISOS', 'Se necesitan permisos para usar la camara en la aplicacion.', [{\n              text: 'Ok'\n            }]);\n            return _context.abrupt(\"return\", false);\n\n          case 8:\n            return _context.abrupt(\"return\", true);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handlerTakeImage = function handlerTakeImage() {\n    var isCameraOK, image;\n    return _regeneratorRuntime.async(function handlerTakeImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions());\n\n          case 2:\n            isCameraOK = _context2.sent;\n\n            if (isCameraOK) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              allowsEditing: true,\n              aspect: [16, 9],\n              quality: 0.8\n            }));\n\n          case 7:\n            image = _context2.sent;\n            setPickerURI(image.uri);\n            props.onImage(image.uri);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.preview,\n      children: !pickerURI ? _jsx(Text, {\n        children: \"No hay imagen seleccionada \"\n      }) : _jsx(Image, {\n        style: styles.image,\n        source: {\n          uri: pickerURI\n        }\n      })\n    }), _jsx(Button, {\n      title: \"Tomar Foto\",\n      color: COLORS.primary,\n      onPress: handlerTakeImage\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 10\n  },\n  preview: {\n    width: '100%',\n    height: 200,\n    marginBottom: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: COLORS.primary,\n    borderWidth: 1\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  }\n});\nexport default ImageSelector;","map":{"version":3,"sources":["C:/Users/Agus Rojas/Desktop/New folder/components/ImageSelector.js"],"names":["React","useState","ImagePicker","COLORS","ImageSelector","props","pickerURI","setPickerURI","verifyPermissions","requestCameraPermissionsAsync","status","console","log","Alert","alert","text","handlerTakeImage","isCameraOK","launchCameraAsync","allowsEditing","aspect","quality","image","uri","onImage","styles","container","preview","primary","StyleSheet","create","marginBottom","width","height","justifyContent","alignItems","borderColor","borderWidth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,SAASC,MAAT;;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,kBAAoCJ,QAAQ,EAA5C;AAAA;AAAA,MAAQK,SAAR;AAAA,MAAmBC,YAAnB;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEN,WAAW,CAACO,6BAAZ,EADF;;AAAA;AAAA;AACfC,YAAAA,MADe,yBACfA,MADe;AAEvBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAFuB,kBAGpBA,MAAM,KAAK,SAHS;AAAA;AAAA;AAAA;;AAInBG,YAAAA,KAAK,CAACC,KAAN,CAAY,cAAZ,EACA,6DADA,EAEA,CAAC;AAACC,cAAAA,IAAI,EAAE;AAAP,aAAD,CAFA;AAJmB,6CAQZ,KARY;;AAAA;AAAA,6CAWhB,IAXgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAaA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACIR,iBAAiB,EADrB;;AAAA;AACfS,YAAAA,UADe;;AAAA,gBAEjBA,UAFiB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,6CAIDf,WAAW,CAACgB,iBAAZ,CAA8B;AAC9CC,cAAAA,aAAa,EAAE,IAD+B;AAE9CC,cAAAA,MAAM,EAAE,CAAC,EAAD,EAAI,CAAJ,CAFsC;AAG9CC,cAAAA,OAAO,EAAE;AAHqC,aAA9B,CAJC;;AAAA;AAIfC,YAAAA,KAJe;AAUrBf,YAAAA,YAAY,CAACe,KAAK,CAACC,GAAP,CAAZ;AACAlB,YAAAA,KAAK,CAACmB,OAAN,CAAcF,KAAK,CAACC,GAApB;;AAXqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAcA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA,gBACK,CAACrB,SAAD,GACM,KAAC,IAAD;AAAA;AAAA,QADN,GAEM,KAAC,KAAD;AACC,QAAA,KAAK,EAAEmB,MAAM,CAACH,KADf;AAEC,QAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAEjB;AAAN;AAFT;AAHX,MADJ,EASI,KAAC,MAAD;AACI,MAAA,KAAK,EAAC,YADV;AAEI,MAAA,KAAK,EAAEH,MAAM,CAACyB,OAFlB;AAGI,MAAA,OAAO,EAAEZ;AAHb,MATJ;AAAA,IADJ;AAgBH,CA9CD;;AAgDA,IAAMS,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,YAAY,EAAE;AADP,GADkB;AAI7BJ,EAAAA,OAAO,EAAE;AACLK,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAE,GAFH;AAGLF,IAAAA,YAAY,EAAE,EAHT;AAILG,IAAAA,cAAc,EAAE,QAJX;AAKLC,IAAAA,UAAU,EAAE,QALP;AAMLC,IAAAA,WAAW,EAAEjC,MAAM,CAACyB,OANf;AAOLS,IAAAA,WAAW,EAAE;AAPR,GAJoB;AAa7Bf,EAAAA,KAAK,EAAE;AACHU,IAAAA,KAAK,EAAE,MADJ;AAEHC,IAAAA,MAAM,EAAE;AAFL;AAbsB,CAAlB,CAAf;AAmBA,eAAe7B,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, Button, Image, Text, StyleSheet, Alert } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { COLORS } from '../constants';\n\nconst ImageSelector = (props) => {\n    const [ pickerURI, setPickerURI ] = useState();\n\n    const verifyPermissions = async () => {\n       const { status } = await ImagePicker.requestCameraPermissionsAsync();\n       console.log(status);\n       if(status !== 'granted') {\n           Alert.alert('SIN PERMISOS',\n           'Se necesitan permisos para usar la camara en la aplicacion.', \n           [{text: 'Ok'}]\n           )\n           return false;\n       }\n\n       return true;\n    }\n    const handlerTakeImage = async () => {\n        const isCameraOK = await verifyPermissions();\n        if(!isCameraOK) return;\n\n        const image = await ImagePicker.launchCameraAsync({\n            allowsEditing: true,\n            aspect: [16,9],\n            quality: 0.8\n        })\n\n        setPickerURI(image.uri);\n        props.onImage(image.uri);\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.preview}>\n                {!pickerURI \n                    ? (<Text>No hay imagen seleccionada </Text>)\n                    : (<Image \n                        style={styles.image}\n                        source={{uri: pickerURI}}/>)\n                }\n            </View>\n            <Button\n                title=\"Tomar Foto\"\n                color={COLORS.primary}\n                onPress={handlerTakeImage}/>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        marginBottom: 10,\n    },\n    preview: {\n        width: '100%',\n        height: 200,\n        marginBottom: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderColor: COLORS.primary,\n        borderWidth: 1,\n    },\n    image: {\n        width: '100%',\n        height: '100%'\n    }\n})\n\nexport default ImageSelector;"]},"metadata":{},"sourceType":"module"}