{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as FileSystem from 'expo-file-system';\nexport var ADD_PLACE = 'ADD_PLACE';\nexport var addPlace = function addPlace(title, image) {\n  return function _callee(dispatch) {\n    var fileName, Path;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fileName = image.split('/').pop();\n            Path = FileSystem.documentDirectory + fileName;\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(FileSystem.moveAsync({\n              from: image,\n              to: Path\n            }));\n\n          case 5:\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n            throw _context.t0;\n\n          case 11:\n            dispatch({\n              type: ADD_PLACE,\n              payload: {\n                title: title,\n                image: Path\n              }\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 7]], Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/Agus Rojas/Desktop/New folder/store/places.actions.js"],"names":["FileSystem","ADD_PLACE","addPlace","title","image","dispatch","fileName","split","pop","Path","documentDirectory","moveAsync","from","to","console","log","type","payload"],"mappings":";AAAA,OAAO,KAAKA,UAAZ,MAA4B,kBAA5B;AACA,OAAO,IAAMC,SAAS,GAAG,WAAlB;AAGP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,KAAR,EAAkB;AACtC,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,YAAAA,QADH,GACcF,KAAK,CAACG,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,EADd;AAEGC,YAAAA,IAFH,GAEUT,UAAU,CAACU,iBAAX,GAA+BJ,QAFzC;AAAA;AAAA;AAAA,6CAKON,UAAU,CAACW,SAAX,CAAqB;AACvBC,cAAAA,IAAI,EAAER,KADiB;AAEvBS,cAAAA,EAAE,EAAEJ;AAFmB,aAArB,CALP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUCK,YAAAA,OAAO,CAACC,GAAR;AAVD;;AAAA;AAcHV,YAAAA,QAAQ,CAAC;AAACW,cAAAA,IAAI,EAAEf,SAAP;AAAkBgB,cAAAA,OAAO,EAAE;AAACd,gBAAAA,KAAK,EAALA,KAAD;AAAQC,gBAAAA,KAAK,EAAEK;AAAf;AAA3B,aAAD,CAAR;;AAdG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAkBH,CAnBM","sourcesContent":["import * as FileSystem from 'expo-file-system';\nexport const ADD_PLACE = 'ADD_PLACE'\n\n\nexport const addPlace = (title, image) => {\n    return async dispatch => {        \n        const fileName = image.split('/').pop();\n        const Path = FileSystem.documentDirectory + fileName; \n\n        try {\n            await FileSystem.moveAsync({\n                from: image,\n                to: Path,\n            })\n        } catch (err) {\n            console.log(err);\n            throw err;\n        }\n\n        dispatch({type: ADD_PLACE, payload: {title, image: Path}});\n    }\n\n    \n}"]},"metadata":{},"sourceType":"module"}