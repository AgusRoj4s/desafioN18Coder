{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { COLORS } from \"../constants\";\nimport { addPlace } from \"../store/places.actions\";\nimport ImageSelector from \"../components/ImageSelector\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar NewPlaceScreen = function NewPlaceScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var handlerTitleChange = function handlerTitleChange(text) {\n    return setTitle(text);\n  };\n\n  var handlerImageChange = function handlerImageChange(img) {\n    return setImage(img);\n  };\n\n  var handlerSave = function handlerSave() {\n    dispatch(addPlace(title, image));\n    navigation.navigate('Direcciones');\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Titulo\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: handlerTitleChange\n      }), _jsx(ImageSelector, {\n        onImage: handlerImageChange\n      }), _jsx(Button, {\n        title: \"Grabar Direccion\",\n        color: COLORS.primary,\n        onPress: handlerSave\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 30\n  },\n  label: {\n    fontSize: 18,\n    marginBottom: 16\n  },\n  input: {\n    borderBottomColor: '#ccc',\n    borderBottomWidth: 1,\n    marginBottom: 16,\n    paddingHorizontal: 2,\n    paddingVertical: 4\n  }\n});\nexport default NewPlaceScreen;","map":{"version":3,"sources":["C:/Users/Agus Rojas/Desktop/New folder/screens/NewPlaceScreen.js"],"names":["React","useState","useDispatch","COLORS","addPlace","ImageSelector","NewPlaceScreen","navigation","dispatch","title","setTitle","image","setImage","handlerTitleChange","text","handlerImageChange","img","handlerSave","navigate","styles","container","label","input","primary","StyleSheet","create","flex","margin","fontSize","marginBottom","borderBottomColor","borderBottomWidth","paddingHorizontal","paddingVertical"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;;;;AAEA,SAASC,MAAT;AACA,SAASC,QAAT;AACA,OAAOC,aAAP;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AACrC,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AACA,kBAA4BD,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAQQ,KAAR;AAAA,MAAeC,QAAf;;AACA,mBAA4BT,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAQU,KAAR;AAAA,MAAeC,QAAf;;AAEA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,IAAI;AAAA,WAAIJ,QAAQ,CAACI,IAAD,CAAZ;AAAA,GAA/B;;AACA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,GAAG;AAAA,WAAIJ,QAAQ,CAACI,GAAD,CAAZ;AAAA,GAA9B;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBT,IAAAA,QAAQ,CAACJ,QAAQ,CAACK,KAAD,EAAQE,KAAR,CAAT,CAAR;AACAJ,IAAAA,UAAU,CAACW,QAAX,CAAoB,aAApB;AACH,GAHD;;AAKA,SACI,KAAC,UAAD;AAAA,cACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,QADJ,EAEI,KAAC,SAAD;AAAW,QAAA,KAAK,EAAEF,MAAM,CAACG,KAAzB;AAAgC,QAAA,YAAY,EAAET;AAA9C,QAFJ,EAGI,KAAC,aAAD;AAAe,QAAA,OAAO,EAAEE;AAAxB,QAHJ,EAII,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAiC,QAAA,KAAK,EAAEZ,MAAM,CAACoB,OAA/C;AAAwD,QAAA,OAAO,EAAEN;AAAjE,QAJJ;AAAA;AADJ,IADJ;AAUH,CAtBD;;AAwBA,IAAME,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,MAAM,EAAE;AAFD,GADkB;AAK7BN,EAAAA,KAAK,EAAE;AACHO,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,YAAY,EAAE;AAFX,GALsB;AAS7BP,EAAAA,KAAK,EAAE;AACHQ,IAAAA,iBAAiB,EAAE,MADhB;AAEHC,IAAAA,iBAAiB,EAAE,CAFhB;AAGHF,IAAAA,YAAY,EAAE,EAHX;AAIHG,IAAAA,iBAAiB,EAAE,CAJhB;AAKHC,IAAAA,eAAe,EAAE;AALd;AATsB,CAAlB,CAAf;AAkBA,eAAe3B,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { View, Text, StyleSheet, TextInput, ScrollView, Button } from 'react-native';\nimport { COLORS } from '../constants';\nimport { addPlace } from '../store/places.actions';\nimport ImageSelector from '../components/ImageSelector';\n\nconst NewPlaceScreen = ({navigation}) => {\n    const dispatch = useDispatch();\n    const [ title, setTitle ] = useState('');\n    const [ image, setImage ] = useState('');\n\n    const handlerTitleChange = text => setTitle(text);\n    const handlerImageChange = img => setImage(img);\n    const handlerSave = () => {\n        dispatch(addPlace(title, image));\n        navigation.navigate('Direcciones');\n    }\n\n    return (\n        <ScrollView>\n            <View style={styles.container}>\n                <Text style={styles.label}>Titulo</Text>\n                <TextInput style={styles.input} onChangeText={handlerTitleChange}/>\n                <ImageSelector onImage={handlerImageChange}/>\n                <Button title=\"Grabar Direccion\" color={COLORS.primary} onPress={handlerSave}/>\n            </View>\n        </ScrollView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        margin: 30\n    },\n    label: {\n        fontSize: 18,\n        marginBottom: 16\n    },\n    input: {\n        borderBottomColor: '#ccc',\n        borderBottomWidth: 1,\n        marginBottom: 16,\n        paddingHorizontal: 2,\n        paddingVertical: 4\n    }\n})\n\nexport default NewPlaceScreen\n"]},"metadata":{},"sourceType":"module"}