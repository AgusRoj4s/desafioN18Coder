{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { ADD_PLACE } from \"./places.actions\";\nimport Place from \"../models/Place\";\nvar initialState = {\n  places: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_PLACE:\n      var newPlace = new Place(Date.now(), action.payload.title, action.payload.image);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        places: state.places.concat(newPlace)\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Agus Rojas/Desktop/New folder/store/places.reducer.js"],"names":["ADD_PLACE","Place","initialState","places","state","action","type","newPlace","Date","now","payload","title","image","concat"],"mappings":";;;;;;AAAA,SAASA,SAAT;AACA,OAAOC,KAAP;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB;AAIA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,SAAL;AACI,UAAMO,QAAQ,GAAG,IAAIN,KAAJ,CAAUO,IAAI,CAACC,GAAL,EAAV,EAAsBJ,MAAM,CAACK,OAAP,CAAeC,KAArC,EAA4CN,MAAM,CAACK,OAAP,CAAeE,KAA3D,CAAjB;AACA,6CACOR,KADP;AAEID,QAAAA,MAAM,EAAEC,KAAK,CAACD,MAAN,CAAaU,MAAb,CAAoBN,QAApB;AAFZ;;AAIJ;AACI,aAAOH,KAAP;AARR;AAUH,CAXD","sourcesContent":["import { ADD_PLACE } from './places.actions';\nimport Place from '../models/Place';\n\nconst initialState = {\n    places: []\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case ADD_PLACE:\n            const newPlace = new Place(Date.now(), action.payload.title, action.payload.image);\n            return {\n                ...state,\n                places: state.places.concat(newPlace),\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}